# Advanced Vulnerability Detection Patterns Configuration
# This file contains all regex patterns used for vulnerability detection
# Patterns can be updated without code changes

# Risk thresholds configuration
risk_thresholds:
  low: 10
  medium: 25
  high: 40
  critical: 60

# Maximum findings per category to avoid overwhelming output
max_findings_per_category: 50

# SQL injection patterns for content providers
sql_injection_patterns:
  content_provider_queries:
    - 'query\s*\(\s*[^,]*,\s*[^,]*,\s*[^,]*\+'
    - 'rawQuery\s*\(\s*[^,]*\+'
    - 'execSQL\s*\(\s*[^,]*\+'
    - 'ContentResolver\.query\s*\([^)]*\+'
    - 'getContentResolver\(\)\.query\s*\([^)]*\+'
    
  dynamic_sql_construction:
    - 'SELECT\s+.*\+.*FROM'
    - 'INSERT\s+.*\+.*INTO'
    - 'UPDATE\s+.*\+.*SET'
    - 'DELETE\s+.*\+.*FROM'
    - 'WHERE\s+.*\+'
    - 'ORDER\s+BY\s+.*\+'
    
  unsafe_sql_methods:
    - 'Statement\.execute\('
    - 'Statement\.executeQuery\('
    - 'Statement\.executeUpdate\('
    - 'PreparedStatement\.execute\('
    - 'CallableStatement\.execute\('

# Path traversal patterns
path_traversal_patterns:
  file_operations:
    - 'new\s+File\s*\(\s*[^,)]*\+'
    - 'FileInputStream\s*\(\s*[^,)]*\+'
    - 'FileOutputStream\s*\(\s*[^,)]*\+'
    - 'RandomAccessFile\s*\(\s*[^,)]*\+'
    - 'Files\.newInputStream\s*\(\s*[^,)]*\+'
    - 'Files\.newOutputStream\s*\(\s*[^,)]*\+'
    
  path_manipulation:
    - '\.\.\/'
    - '\.\.\\\\' 
    - '%2e%2e%2f'
    - '%2e%2e/'
    - '..%2f'
    - '..%5c'
    
  unsafe_path_methods:
    - 'getCanonicalPath\(\)'
    - 'getAbsolutePath\(\)'
    - 'getPath\(\)'
    - 'toString\(\)'

# Insecure data storage patterns
data_storage_patterns:
  shared_preferences:
    - 'getSharedPreferences\('
    - 'PreferenceManager\.getDefaultSharedPreferences\('
    - 'SharedPreferences\.Editor'
    - 'putString\('
    - 'putInt\('
    - 'commit\(\)'
    - 'apply\(\)'
    
  internal_storage:
    - 'openFileOutput\('
    - 'openFileInput\('
    - 'getFilesDir\(\)'
    - 'getCacheDir\(\)'
    - 'getDir\('
    
  external_storage:
    - 'getExternalStorageDirectory\(\)'
    - 'getExternalFilesDir\('
    - 'getExternalCacheDir\('
    - 'Environment\.getExternalStorageDirectory\('
    - 'WRITE_EXTERNAL_STORAGE'
    - 'READ_EXTERNAL_STORAGE'
    
  database_operations:
    - 'SQLiteDatabase'
    - 'SQLiteOpenHelper'
    - 'openOrCreateDatabase\('
    - 'execSQL\('
    - 'rawQuery\('
    - 'query\('

# Backup-related patterns
backup_patterns:
  - "android:allowBackup\\s*=\\s*[\"']true[\"']"
  - 'BackupAgent'
  - 'BackupAgentHelper'
  - 'onBackup\('
  - 'onRestore\('
  - 'SharedPreferencesBackupHelper'
  - 'FileBackupHelper'

# Advanced injection patterns
injection_patterns:
  xpath_injection:
    - 'XPath\.compile\s*\(\s*[^,)]*\+'
    - 'XPathExpression\.evaluate\s*\(\s*[^,)]*\+'
    - 'selectNodes\s*\(\s*[^,)]*\+'
    - 'selectSingleNode\s*\(\s*[^,)]*\+'
    
  ldap_injection:
    - 'DirContext\.search\s*\(\s*[^,)]*\+'
    - 'LdapContext\.search\s*\(\s*[^,)]*\+'
    - 'SearchControls\s*\(\s*[^,)]*\+'
    
  command_injection:
    - 'Runtime\.getRuntime\(\)\.exec\s*\(\s*[^,)]*\+'
    - 'ProcessBuilder\s*\(\s*[^,)]*\+'
    - 'Process\.start\s*\(\s*[^,)]*\+'
    - 'system\s*\(\s*[^,)]*\+'
    
  script_injection:
    - 'ScriptEngine\.eval\s*\(\s*[^,)]*\+'
    - 'JavaScript\s*\(\s*[^,)]*\+'
    - 'evaluateJavascript\s*\(\s*[^,)]*\+'

# Sensitive data patterns
sensitive_data_patterns:
  credentials:
    - "password\\s*=\\s*[\"'][^\"']+[\"']"
    - "passwd\\s*=\\s*[\"'][^\"']+[\"']"
    - "secret\\s*=\\s*[\"'][^\"']+[\"']"
    - "token\\s*=\\s*[\"'][^\"']+[\"']"
    - "api_key\\s*=\\s*[\"'][^\"']+[\"']"
    
  personal_info:
    - "ssn\\s*=\\s*[\"'][^\"']+[\"']"
    - "social_security\\s*=\\s*[\"'][^\"']+[\"']"
    - "credit_card\\s*=\\s*[\"'][^\"']+[\"']"
    - "phone\\s*=\\s*[\"'][^\"']+[\"']"
    - "email\\s*=\\s*[\"'][^\"']+[\"']" 