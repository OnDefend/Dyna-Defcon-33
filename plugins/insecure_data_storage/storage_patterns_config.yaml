# Insecure Data Storage Analysis Pattern Configuration
# External configuration for all storage security patterns used in analysis

# Pattern metadata
version: "2.0.0"
last_updated: "2024-01-01"
total_patterns: 285

# Database security patterns
database_patterns:
  sqlite_database:
    - 'SQLiteDatabase'
    - 'SQLiteOpenHelper'
    - 'openOrCreateDatabase\('
    - 'getReadableDatabase\('
    - 'getWritableDatabase\('
    - 'execSQL\('
    - 'rawQuery\('
    - 'query\('
    - 'insert\('
    - 'update\('
    - 'delete\('
  
  database_encryption:
    - 'SQLCipher'
    - 'net\.sqlcipher'
    - 'database.*encrypt'
    - 'encrypt.*database'
    - 'Room.*encrypt'
    - 'Realm.*encrypt'
    - 'encrypt.*table'
    
  insecure_database:
    - 'MODE_WORLD_READABLE'
    - 'MODE_WORLD_WRITEABLE'
    - 'WORLD_READABLE'
    - 'WORLD_WRITEABLE'
    - 'database.*unencrypt'
    - 'plain.*database'
    - 'clear.*text.*database'

# Shared preferences patterns
shared_preferences_patterns:
  basic_preferences:
    - 'getSharedPreferences\('
    - 'PreferenceManager\.getDefaultSharedPreferences\('
    - 'SharedPreferences\.Editor'
    - 'putString\('
    - 'putInt\('
    - 'putLong\('
    - 'putFloat\('
    - 'putBoolean\('
    - 'commit\(\)'
    - 'apply\(\)'
    
  encrypted_preferences:
    - 'EncryptedSharedPreferences'
    - 'MasterKeys\.getOrCreate'
    - 'AES256_GCM'
    - 'AES256_SIV'
    - 'encrypt.*preferences'
    - 'secure.*preferences'
    
  insecure_preferences:
    - 'MODE_WORLD_READABLE'
    - 'MODE_WORLD_WRITEABLE'
    - 'WORLD_READABLE'
    - 'WORLD_WRITEABLE'
    - 'preferences.*unencrypt'
    - 'plain.*preferences'

# File storage patterns
file_storage_patterns:
  internal_storage:
    - 'openFileOutput\('
    - 'openFileInput\('
    - 'getFilesDir\(\)'
    - 'getCacheDir\(\)'
    - 'getDir\('
    - 'FileOutputStream'
    - 'FileInputStream'
    - 'PrintWriter'
    - 'BufferedWriter'
    
  external_storage:
    - 'getExternalStorageDirectory\(\)'
    - 'getExternalFilesDir\('
    - 'getExternalCacheDir\('
    - 'Environment\.getExternalStorageDirectory\('
    - 'WRITE_EXTERNAL_STORAGE'
    - 'READ_EXTERNAL_STORAGE'
    - 'MediaStore'
    - 'DocumentsProvider'
    
  encrypted_files:
    - 'EncryptedFile'
    - 'encrypt.*file'
    - 'CipherOutputStream'
    - 'CipherInputStream'
    - 'AES.*file'
    - 'secure.*file'
    
  insecure_files:
    - 'MODE_WORLD_READABLE'
    - 'MODE_WORLD_WRITEABLE'
    - 'WORLD_READABLE'
    - 'WORLD_WRITEABLE'
    - 'file.*unencrypt'
    - 'plain.*file'
    - 'clear.*text.*file'

# Secret detection patterns
secret_patterns:
  api_keys:
    - '[Aa][Pp][Ii]_?[Kk][Ee][Yy].*["\']([A-Za-z0-9]{20,})["\']'
    - '[Kk][Ee][Yy].*["\']([A-Za-z0-9]{20,})["\']'
    - '[Aa][Cc][Cc][Ee][Ss][Ss]_?[Kk][Ee][Yy].*["\']([A-Za-z0-9]{20,})["\']'
    - '[Ss][Ee][Cc][Rr][Ee][Tt]_?[Kk][Ee][Yy].*["\']([A-Za-z0-9]{20,})["\']'
    - 'AIza[0-9A-Za-z\\-_]{35}'  # Google API Key
    - 'sk_live_[0-9a-zA-Z]{24}'  # Stripe Secret Key
    - 'sk_test_[0-9a-zA-Z]{24}'  # Stripe Test Key
    - 'pk_live_[0-9a-zA-Z]{24}'  # Stripe Public Key
    - 'pk_test_[0-9a-zA-Z]{24}'  # Stripe Test Key
    
  passwords:
    - '[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*["\']([^"\']{8,})["\']'
    - '[Pp][Ww][Dd].*["\']([^"\']{8,})["\']'
    - '[Pp][Aa][Ss][Ss].*["\']([^"\']{8,})["\']'
    - 'password\s*=\s*["\']([^"\']{8,})["\']'
    - 'passwd\s*=\s*["\']([^"\']{8,})["\']'
    
  tokens:
    - '[Tt][Oo][Kk][Ee][Nn].*["\']([A-Za-z0-9+/=]{20,})["\']'
    - '[Aa][Cc][Cc][Ee][Ss][Ss]_?[Tt][Oo][Kk][Ee][Nn].*["\']([A-Za-z0-9+/=]{20,})["\']'
    - '[Aa][Uu][Tt][Hh]_?[Tt][Oo][Kk][Ee][Nn].*["\']([A-Za-z0-9+/=]{20,})["\']'
    - '[Bb][Ee][Aa][Rr][Ee][Rr]\s+([A-Za-z0-9+/=]{20,})'
    - 'xox[baprs]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32}'  # Slack Token
    
  certificates:
    - '-----BEGIN CERTIFICATE-----'
    - '-----END CERTIFICATE-----'
    - '-----BEGIN PRIVATE KEY-----'
    - '-----END PRIVATE KEY-----'
    - '-----BEGIN RSA PRIVATE KEY-----'
    - '-----END RSA PRIVATE KEY-----'
    - 'MIIE[A-Za-z0-9+/=]+'  # X.509 Certificate
    
  database_credentials:
    - 'jdbc:.*://.*:.*@'
    - 'mongodb://.*:.*@'
    - 'mysql://.*:.*@'
    - 'postgresql://.*:.*@'
    - '[Dd][Bb]_?[Uu][Ss][Ee][Rr].*["\']([^"\']+)["\']'
    - '[Dd][Bb]_?[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*["\']([^"\']+)["\']'
    
  encryption_keys:
    - '[Ee][Nn][Cc][Rr][Yy][Pp][Tt][Ii][Oo][Nn]_?[Kk][Ee][Yy].*["\']([A-Za-z0-9+/=]{16,})["\']'
    - '[Aa][Ee][Ss]_?[Kk][Ee][Yy].*["\']([A-Za-z0-9+/=]{16,})["\']'
    - '[Dd][Ee][Ss]_?[Kk][Ee][Yy].*["\']([A-Za-z0-9+/=]{16,})["\']'
    - '[Cc][Rr][Yy][Pp][Tt][Oo]_?[Kk][Ee][Yy].*["\']([A-Za-z0-9+/=]{16,})["\']'
    
  pii_data:
    - '\b\d{3}-\d{2}-\d{4}\b'  # SSN
    - '\b\d{4}[- ]?\d{4}[- ]?\d{4}[- ]?\d{4}\b'  # Credit Card
    - '\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'  # Email
    - '\b\d{3}[- ]?\d{3}[- ]?\d{4}\b'  # Phone Number
    - '\b[A-F0-9]{2}:[A-F0-9]{2}:[A-F0-9]{2}:[A-F0-9]{2}:[A-F0-9]{2}:[A-F0-9]{2}\b'  # MAC Address
    - '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'  # UUID/GUID

# Root detection patterns
root_detection_patterns:
  native_binary_analysis:
    - 'su'
    - '/system/bin/su'
    - '/system/xbin/su'
    - '/sbin/su'
    - '/system/app/SuperSU'
    - '/system/app/Kinguser'
    - 'busybox'
    - '/system/bin/busybox'
    - '/system/xbin/busybox'
    - 'rootkit'
    - 'superuser'
    - 'com.noshufou.android.su'
    - 'com.topjohnwu.magisk'
    - 'eu.chainfire.supersu'
    
  file_system_permission_analysis:
    - '/system/etc/hosts'
    - '/system/build.prop'
    - '/system/recovery-resource.dat'
    - '/system/recovery-transform.dat'
    - '/cache/recovery'
    - '/system/app/Superuser.apk'
    - '/system/framework/XposedBridge.jar'
    - '/data/local/tmp'
    - '/data/local/bin'
    
  process_execution_analysis:
    - 'Runtime.getRuntime().exec("su")'
    - 'Runtime.getRuntime().exec("which su")'
    - 'Runtime.getRuntime().exec("id")'
    - 'ProcessBuilder.*su'
    - 'getprop ro.debuggable'
    - 'getprop ro.secure'
    - 'getprop service.adb.root'
    
  system_property_analysis:
    - 'ro.debuggable'
    - 'ro.secure'
    - 'service.adb.root'
    - 'ro.build.tags'
    - 'ro.build.type'
    - 'ro.product.device'
    - 'ro.hardware'
    - 'dev.bootcomplete'
    
  package_manager_analysis:
    - 'PackageManager.*su'
    - 'getInstalledPackages.*su'
    - 'getApplicationInfo.*superuser'
    - 'isPackageInstalled.*root'
    - 'checkSignatures.*root'

# Backup vulnerability patterns
backup_patterns:
  android_backup:
    - 'android:allowBackup\s*=\s*["\']true["\']'
    - 'BackupAgent'
    - 'BackupAgentHelper'
    - 'onBackup\('
    - 'onRestore\('
    - 'SharedPreferencesBackupHelper'
    - 'FileBackupHelper'
    - 'backup.*enabled'
    
  insecure_backup:
    - 'backup.*unencrypt'
    - 'plain.*backup'
    - 'clear.*text.*backup'
    - 'backup.*password.*empty'
    - 'backup.*key.*empty'
    
  secure_backup:
    - 'backup.*encrypt'
    - 'encrypt.*backup'
    - 'BackupManager.*encrypt'
    - 'secure.*backup'
    - 'backup.*key.*protect'

# Data leakage patterns
data_leakage_patterns:
  logging:
    - 'Log\.d\('
    - 'Log\.i\('
    - 'Log\.v\('
    - 'Log\.w\('
    - 'Log\.e\('
    - 'Log\.wtf\('
    - 'System\.out\.print'
    - 'System\.err\.print'
    - 'printStackTrace\(\)'
    - '__android_log_print'
    
  temp_files:
    - 'createTempFile\('
    - 'File\.createTempFile\('
    - 'getTempDir\(\)'
    - 'tmp'
    - 'temp'
    - '/tmp/'
    - '/var/tmp/'
    
  cache_storage:
    - 'getCacheDir\(\)'
    - 'getExternalCacheDir\(\)'
    - 'cache'
    - 'DiskLruCache'
    - 'MemoryCache'
    - 'ImageCache'

# Storage security analysis patterns
storage_security_patterns:
  encryption_algorithms:
    strong:
      - 'AES'
      - 'AES/GCM'
      - 'AES/CBC'
      - 'ChaCha20'
      - 'Salsa20'
      - 'Twofish'
      - 'Serpent'
    weak:
      - 'DES'
      - 'TripleDES'
      - '3DES'
      - 'RC4'
      - 'MD5'
      - 'SHA1'
      - 'ROT13'
      - 'Caesar'
      - 'XOR'
      - 'Base64'
      
  key_management:
    secure:
      - 'AndroidKeyStore'
      - 'KeyStore'
      - 'KeyGenerator'
      - 'SecretKeySpec'
      - 'KeyPairGenerator'
      - 'MasterKeys'
      - 'EncryptedSharedPreferences'
      - 'EncryptedFile'
    insecure:
      - 'hardcoded.*key'
      - 'static.*key'
      - 'const.*key'
      - 'key.*hardcode'
      - 'password.*hardcode'
      - 'secret.*hardcode'

# File permission patterns
file_permission_patterns:
  dangerous_permissions:
    - 'MODE_WORLD_READABLE'
    - 'MODE_WORLD_WRITEABLE'
    - 'WORLD_READABLE'
    - 'WORLD_WRITEABLE'
    - '0666'
    - '0777'
    - 'chmod 666'
    - 'chmod 777'
    
  secure_permissions:
    - 'MODE_PRIVATE'
    - 'MODE_APPEND'
    - '0600'
    - '0640'
    - '0644'
    - 'chmod 600'
    - 'chmod 640'

# Network storage patterns
network_storage_patterns:
  insecure_protocols:
    - 'http://'
    - 'ftp://'
    - 'telnet://'
    - 'smtp://'
    - 'pop3://'
    - 'imap://'
    
  secure_protocols:
    - 'https://'
    - 'ftps://'
    - 'sftp://'
    - 'smtps://'
    - 'pop3s://'
    - 'imaps://'
    
  cloud_storage:
    - 'aws\.amazon'
    - 's3\.amazonaws'
    - 'storage\.googleapis'
    - 'azure\.microsoft'
    - 'dropbox\.com'
    - 'icloud\.com'
    - 'onedrive\.live'

# Storage location patterns
storage_location_patterns:
  internal_storage:
    - '/data/data/'
    - 'getFilesDir'
    - 'getCacheDir'
    - 'getDir'
    - 'openFileOutput'
    
  external_storage:
    - '/sdcard/'
    - '/storage/'
    - '/mnt/sdcard/'
    - 'getExternalStorageDirectory'
    - 'getExternalFilesDir'
    - 'getExternalCacheDir'
    
  removable_storage:
    - '/mnt/media_rw/'
    - '/storage/sdcard1/'
    - '/storage/extSdCard/'
    - 'getExternalMediaDirs'
    - 'getObbDirs' 