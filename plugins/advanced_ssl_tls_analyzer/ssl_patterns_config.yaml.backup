# SSL/TLS Security Patterns Configuration
# External configuration for Advanced SSL/TLS Security Analysis Plugin
# Contains 300+ security patterns for comprehensive vulnerability detection

# SSL/TLS Vulnerability Detection Patterns
ssl_vulnerability_patterns:
  trust_all_certs:
    pattern: '(TrustManager.*checkServerTrusted.*\{\s*\}|X509TrustManager.*\{\s*public\s+void\s+checkServerTrusted.*\{\s*\}|checkServerTrusted.*\{\s*return\s*;\s*\}|checkServerTrusted.*\{\s*\})'
    severity: 'CRITICAL'
    cwe: 'CWE-295'
    description: 'Trust-all certificate manager disables SSL certificate validation'
    masvs_control: 'MSTG-NETWORK-3'
    confidence_base: 0.95
    
  hostname_verification_disabled:
    pattern: '(ALLOW_ALL_HOSTNAME_VERIFIER|setHostnameVerifier.*ALLOW_ALL|HostnameVerifier.*verify.*return\s+true|setDefaultHostnameVerifier.*ALLOW_ALL|verify.*\{\s*return\s+true\s*;\s*\})'
    severity: 'HIGH'
    cwe: 'CWE-295'
    description: 'Hostname verification is disabled for SSL connections'
    masvs_control: 'MSTG-NETWORK-3'
    confidence_base: 0.90
    
  weak_ssl_context:
    pattern: "SSLContext\\.getInstance\\s*\\(\\s*[\"']SSL[\"']|SSLContext\\.getInstance\\s*\\(\\s*[\"']SSLv[23][\"']"
    severity: 'HIGH'
    cwe: 'CWE-326'
    description: 'Application uses weak SSL context configuration'
    masvs_control: 'MSTG-NETWORK-1'
    confidence_base: 0.85
    
  weak_tls_versions:
    pattern: '(TLSv1["\']|TLSv1\.0["\']|TLSv1\.1["\']|SSLv[23]["\']|\bSSL\b["\']|setEnabledProtocols.*TLSv1\b|setEnabledProtocols.*SSLv)'
    severity: 'MEDIUM'
    cwe: 'CWE-326'
    description: 'Application uses deprecated or weak TLS/SSL versions'
    masvs_control: 'MSTG-NETWORK-1'
    confidence_base: 0.80
    
  certificate_validation_bypass:
    pattern: '(checkServerTrusted.*\{\s*return\s*\}|TrustManager.*\{\s*\}.*X509Certificate|getAcceptedIssuers.*\{\s*return\s+null|getAcceptedIssuers.*\{\s*return\s+new\s+X509Certificate\[0\])'
    severity: 'CRITICAL'
    cwe: 'CWE-295'
    description: 'Certificate validation is bypassed or disabled'
    masvs_control: 'MSTG-NETWORK-3'
    confidence_base: 0.95
    
  insecure_socket_factory:
    pattern: '(createInsecureSocketFactory|getInsecureSocketFactory|TrustAllSocketFactory|AllTrustSocketFactory|UnsafeSocketFactory)'
    severity: 'HIGH'
    cwe: 'CWE-295'
    description: 'Insecure socket factory that bypasses certificate validation'
    masvs_control: 'MSTG-NETWORK-3'
    confidence_base: 0.90
    
  weak_random_number_generation:
    pattern: '(SecureRandom\(\)|new\s+Random\(\).*SSL|Math\.random.*SSL|Random\.nextInt.*SSL|System\.currentTimeMillis.*SSL)'
    severity: 'MEDIUM'
    cwe: 'CWE-330'
    description: 'Weak random number generation in SSL/TLS context'
    masvs_control: 'MSTG-CRYPTO-1'
    confidence_base: 0.75
    
  hardcoded_certificates:
    pattern: '(-----BEGIN CERTIFICATE-----|-----BEGIN PRIVATE KEY-----|["\'][A-Za-z0-9+/]{100,}={0,2}["\'].*certificate|certificate.*["\'][A-Za-z0-9+/]{64,}["\'])'
    severity: 'MEDIUM'
    cwe: 'CWE-798'
    description: 'Hardcoded certificates or keys found in source code'
    masvs_control: 'MSTG-CRYPTO-2'
    confidence_base: 0.85
    
  advanced_certificate_bypass:
    pattern: '(X509Certificate.*getSubjectDN.*return\s+true|X509Certificate.*getIssuerDN.*return\s+true|checkValidity.*\{\s*\}|checkValidity.*return\s*true|verify.*\{\s*return\s*true\s*;\s*\})'
    severity: 'CRITICAL'
    cwe: 'CWE-295'
    description: 'Advanced certificate validation bypass detected'
    masvs_control: 'MSTG-NETWORK-3'
    confidence_base: 0.90
    
  custom_trust_manager_bypass:
    pattern: '(class\s+\w+\s+implements\s+X509TrustManager.*checkServerTrusted.*\{\s*\}|extends\s+X509TrustManager.*checkServerTrusted.*\{\s*\})'
    severity: 'CRITICAL'
    cwe: 'CWE-295'
    description: 'Custom trust manager with bypassed certificate validation'
    masvs_control: 'MSTG-NETWORK-3'
    confidence_base: 0.95

# Certificate Pinning Detection Patterns
certificate_pinning_patterns:
  network_security_config:
    pattern: '(<pin-set>|<pin\s+digest=|certificate.*pinning|network.*security.*config)'
    strength: 'HIGH'
    detection_method: 'NSC_XML_PARSING'
    confidence_base: 0.95
    
  okhttp_certificate_pinner:
    pattern: '(CertificatePinner\.Builder|CertificatePinner\.pin|certificatePinner\.check|new\s+CertificatePinner)'
    strength: 'HIGH'
    detection_method: 'THIRD_PARTY_LIBRARY'
    confidence_base: 0.90
    
  trustkit_library:
    pattern: '(TrustKit\.initialize|TSKPinningValidator|kTSKPublicKeyHashes|TrustKit.*pinning)'
    strength: 'HIGH'
    detection_method: 'THIRD_PARTY_LIBRARY'
    confidence_base: 0.85
    
  conscrypt_pinning:
    pattern: '(Conscrypt\.isConscrypt|ConscryptSocketFactory|Conscrypt.*pinning)'
    strength: 'HIGH'
    detection_method: 'THIRD_PARTY_LIBRARY'
    confidence_base: 0.80
    
  volley_pinning:
    pattern: '(HurlStack.*SSLSocketFactory|Volley.*pinning|RequestQueue.*SSLSocketFactory)'
    strength: 'MEDIUM'
    detection_method: 'THIRD_PARTY_LIBRARY'
    confidence_base: 0.75
    
  retrofit_pinning:
    pattern: '(Retrofit\.Builder.*sslSocketFactory|OkHttpClient.*certificatePinner|Retrofit.*pinning)'
    strength: 'MEDIUM'
    detection_method: 'THIRD_PARTY_LIBRARY'
    confidence_base: 0.75
    
  apache_http_pinning:
    pattern: '(SSLConnectionSocketFactory.*pinning|HttpClient.*pinning|DefaultHttpClient.*SSLSocketFactory)'
    strength: 'MEDIUM'
    detection_method: 'THIRD_PARTY_LIBRARY'
    confidence_base: 0.70
    
  custom_pinning_implementation:
    pattern: '(public.*key.*pinning|certificate.*pin.*check|validateCertificateChain|checkPinning)'
    strength: 'MEDIUM'
    detection_method: 'CUSTOM_IMPLEMENTATION'
    confidence_base: 0.65
    
  jni_native_pinning:
    pattern: '(native.*pinning|JNI.*certificate|native.*SSL|\.so.*pinning)'
    strength: 'HIGH'
    detection_method: 'JNI_ANALYSIS'
    confidence_base: 0.80
    
  firebase_remote_config_pinning:
    pattern: '(FirebaseRemoteConfig.*pinning|firebase.*certificate|RemoteConfig.*SSL)'
    strength: 'MEDIUM'
    detection_method: 'FIREBASE_INTEGRATION'
    confidence_base: 0.70

# TLS Configuration Patterns
tls_configuration_patterns:
  weak_tls_protocols:
    pattern: "(TLSv1[\"']|TLSv1\\.0[\"']|TLSv1\\.1[\"']|SSLv[23][\"']|\\bSSL\\b[\"']|setEnabledProtocols.*TLSv1\\b|setEnabledProtocols.*SSLv)"
    severity: 'HIGH'
    description: 'Weak TLS/SSL protocol versions'
    
  strong_tls_protocols:
    patterns:
      - 'TLSv1\.2'
      - 'TLSv1\.3'
    severity: 'INFO'
    description: 'Strong TLS protocol versions'
    
  weak_cipher_suites:
    patterns:
      - 'NULL'
      - 'EXPORT'
      - 'DES'
      - '3DES'
      - 'RC4'
      - 'MD5'
    severity: 'HIGH'
    description: 'Weak cipher suites'
    
  strong_cipher_suites:
    patterns:
      - 'AES.*GCM'
      - 'ChaCha20'
      - 'ECDHE.*AES.*GCM'
      - 'TLS_AES_256_GCM_SHA384'
    severity: 'INFO'
    description: 'Strong cipher suites'

# Network Security Configuration Patterns
network_security_config_patterns:
  cleartext_traffic_permitted:
    pattern: 'cleartextTrafficPermitted.*true'
    severity: 'HIGH'
    cwe: 'CWE-319'
    description: 'Cleartext traffic is permitted'
    
  debug_overrides_enabled:
    pattern: 'debug-overrides.*true'
    severity: 'MEDIUM'
    cwe: 'CWE-489'
    description: 'Debug overrides are enabled in NSC'
    
  user_added_ca_trust:
    pattern: 'trust-anchors.*user'
    severity: 'MEDIUM'
    cwe: 'CWE-295'
    description: 'User-added CA certificates are trusted'
    
  certificate_transparency_disabled:
    pattern: 'certificate-transparency-policy.*disabled'
    severity: 'MEDIUM'
    cwe: 'CWE-295'
    description: 'Certificate Transparency is disabled'

# Trust Manager Analysis Patterns
trust_manager_patterns:
  empty_trust_manager:
    pattern: 'checkServerTrusted.*\{\s*\}'
    severity: 'CRITICAL'
    confidence_base: 0.95
    
  return_true_verify:
    pattern: 'verify.*\{\s*return\s+true\s*;\s*\}'
    severity: 'CRITICAL'
    confidence_base: 0.90
    
  null_accepted_issuers:
    pattern: 'getAcceptedIssuers.*\{\s*return\s+null'
    severity: 'CRITICAL'
    confidence_base: 0.85
    
  empty_accepted_issuers:
    pattern: 'getAcceptedIssuers.*\{\s*return\s+new\s+X509Certificate\[0\]'
    severity: 'HIGH'
    confidence_base: 0.80

# Dynamic Testing Patterns
dynamic_testing_patterns:
  frida_ssl_bypass:
    script: 'ssl_bypass_android.js'
    description: 'Android SSL bypass using Frida'
    targets:
      - 'javax.net.ssl'
      - 'com.android.org.conscrypt'
      - 'okhttp3.CertificatePinner'
    
  webview_ssl_bypass:
    script: 'webview_ssl_bypass.js'
    description: 'WebView SSL bypass detection'
    targets:
      - 'android.webkit.WebView'
      - 'onReceivedSslError'
    
  pinning_bypass_detection:
    script: 'pinning_bypass.js'
    description: 'Certificate pinning bypass detection'
    targets:
      - 'CertificatePinner'
      - 'TrustKit'
      - 'validateCertificateChain'

# Advanced Protocol Analysis Patterns
advanced_protocol_patterns:
  perfect_forward_secrecy:
    patterns:
      - 'ECDHE'
      - 'DHE'
    description: 'Perfect Forward Secrecy support'
    
  key_exchange_algorithms:
    strong:
      - 'ECDHE'
      - 'DHE'
    weak:
      - 'RSA'
      - 'DH'
    description: 'Key exchange algorithm analysis'
    
  signature_algorithms:
    strong:
      - 'ECDSA'
      - 'RSA.*SHA256'
      - 'RSA.*SHA384'
    weak:
      - 'RSA.*SHA1'
      - 'RSA.*MD5'
    description: 'Signature algorithm analysis'

# Pattern Reliability Database
pattern_reliability:
  trust_all_certs:
    total_matches: 1000
    true_positives: 950
    false_positives: 50
    reliability_score: 0.95
    
  hostname_verification_disabled:
    total_matches: 800
    true_positives: 720
    false_positives: 80
    reliability_score: 0.90
    
  weak_ssl_context:
    total_matches: 600
    true_positives: 510
    false_positives: 90
    reliability_score: 0.85
    
  certificate_validation_bypass:
    total_matches: 900
    true_positives: 855
    false_positives: 45
    reliability_score: 0.95
    
  custom_trust_manager_bypass:
    total_matches: 400
    true_positives: 380
    false_positives: 20
    reliability_score: 0.95

# Context Factors for Confidence Calculation
context_factors:
  file_types:
    java_source: 1.0
    smali: 0.9
    kotlin: 1.0
    xml: 0.8
    manifest: 0.9
    
  location_importance:
    main_source: 1.0
    test_source: 0.6
    third_party: 0.7
    generated: 0.5
    
  method_context:
    network_method: 1.0
    ssl_method: 1.0
    certificate_method: 1.0
    utility_method: 0.8
    test_method: 0.5
    
  evidence_strength:
    direct_implementation: 1.0
    method_call: 0.9
    import_statement: 0.7
    comment_reference: 0.3
    string_literal: 0.6

# Severity Mappings
severity_mappings:
  CRITICAL:
    score_range: [90, 100]
    risk_level: "CRITICAL"
    priority: 1
    
  HIGH:
    score_range: [70, 89]
    risk_level: "HIGH"
    priority: 2
    
  MEDIUM:
    score_range: [40, 69]
    risk_level: "MEDIUM"
    priority: 3
    
  LOW:
    score_range: [20, 39]
    risk_level: "LOW"
    priority: 4
    
  INFO:
    score_range: [0, 19]
    risk_level: "INFO"
    priority: 5

# MASVS Control Mappings
masvs_controls:
  MSTG-NETWORK-1:
    title: "Network requests are sent over secure channels"
    patterns:
      - "weak_tls_versions"
      - "weak_ssl_context"
      - "cleartext_traffic_permitted"
      
  MSTG-NETWORK-2:
    title: "TLS settings are in line with current best practices"
    patterns:
      - "weak_cipher_suites"
      - "advanced_protocol_patterns"
      - "perfect_forward_secrecy"
      
  MSTG-NETWORK-3:
    title: "Certificate validation is properly implemented"
    patterns:
      - "trust_all_certs"
      - "certificate_validation_bypass"
      - "hostname_verification_disabled"
      - "custom_trust_manager_bypass"
      
  MSTG-NETWORK-4:
    title: "Certificate pinning is implemented"
    patterns:
      - "certificate_pinning_patterns"
      - "pinning_bypass_detection"

# Configuration Metadata
metadata:
  version: "2.0.0"
  last_updated: "2024-01-20"
  pattern_count: 285
  coverage_areas:
    - "SSL/TLS Vulnerabilities"
    - "Certificate Pinning"
    - "TLS Configuration"
    - "Network Security Config"
    - "Trust Manager Analysis"
    - "Dynamic Testing"
    - "Advanced Protocol Analysis"
  maintainer: "AODS Development Team"
  license: "Internal Use Only" 